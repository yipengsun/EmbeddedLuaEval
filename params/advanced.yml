msg: >-
    print("This should work")

a: math.pi
b: math.cos(a)
c: math.sin(a)

debug: print(a, b, c)

# these names are chosen because they are similar to Python counter parts
# Lua's array can act like both, which can be good or annoying
list: >-
    {a, b, c}
dict: >-
    {a = a, b = b, c = c}

# pairs and ipairs are allowed, so these work
printList: >-
    (function(x) for i, v in ipairs(x) do print("idx "..i..": "..v) end end)(list)
printDict: >-
    (function(x) for k, v in pairs(x) do print(k .. " = " .. v) end end)(dict)

# you can also define Lua functions (same function as above)
# it's particularly nice that all functions in Lua are anonymous lambda
prettyPrint: >-
    function(t)
        print("You are now using prettyPrint...")
        for k, v in pairs(t) do
            print(k .. " = " .. v)
        end
    end
printDictAgain: prettyPrint(dict)

# no protected variable can be altered
#_mSandboxEnv: false
#load: false
#math: false
#print: false
#pairs: false
